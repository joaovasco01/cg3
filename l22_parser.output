Terminals unused in grammar

    tPRIVATE


State 19 conflicts: 1 shift/reduce
State 40 conflicts: 13 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 4 shift/reduce
State 55 conflicts: 1 shift/reduce
State 75 conflicts: 4 shift/reduce
State 77 conflicts: 4 shift/reduce
State 153 conflicts: 4 shift/reduce


Grammar

    0 $accept: file $end

    1 file: %empty
    2     | declarations
    3     | program
    4     | declarations program

    5 program: tBEGIN block tEND

    6 declarations: declaration
    7             | declarations declaration
    8             | declaration ';'
    9             | declarations declaration ';'

   10 optional: %empty
   11         | '=' expr

   12 declaration: qualifier type tIDENTIFIER
   13            | tPUBLIC type tIDENTIFIER optional
   14            | type tIDENTIFIER optional
   15            | tPUBLIC var tIDENTIFIER '=' expr
   16            | var tIDENTIFIER '=' expr

   17 qualifier: tUSE
   18          | tFOREIGN

   19 var: tVAR
   20    | %empty

   21 types: %empty
   22      | type
   23      | types ',' type

   24 type: '[' type ']'
   25     | tINT_TYPE
   26     | tDOUBLE_TYPE
   27     | tTEXT_TYPE
   28     | tVOID_TYPE
   29     | funcType

   30 funcType: type '<' types '>'

   31 variable: type tIDENTIFIER

   32 variables: variable
   33          | variables ',' variable

   34 expressions: expr
   35            | expressions ',' expr

   36 expr: tINTEGER
   37     | tREAL
   38     | string
   39     | tNULL
   40     | '-' expr
   41     | '+' expr
   42     | tNOT expr
   43     | expr '+' expr
   44     | expr '-' expr
   45     | expr '*' expr
   46     | expr '/' expr
   47     | expr '%' expr
   48     | expr '<' expr
   49     | expr '>' expr
   50     | expr tGE expr
   51     | expr tLE expr
   52     | expr tNE expr
   53     | expr tEQ expr
   54     | expr tOR expr
   55     | expr tAND expr
   56     | tINPUT
   57     | tSIZE_OF '(' expr ')'
   58     | '(' expr ')'
   59     | lval '?'
   60     | lval
   61     | lval '=' expr
   62     | funcCall
   63     | function
   64     | '[' expr ']'

   65 function: '(' ')' tRETURN_TYPE type ':' block
   66         | '(' variables ')' tRETURN_TYPE type ':' block

   67 string: tSTRING
   68       | string tSTRING

   69 lval: tIDENTIFIER
   70     | expr '[' expr ']'

   71 block: '{' declarations instructions '}'
   72      | '{' instructions '}'

   73 funcCall: '@' '(' expressions ')'
   74         | '@' '(' ')'
   75         | expr '(' expressions ')'
   76         | expr '(' ')'

   77 instructions: instructions instruction
   78             | instruction
   79             | instructions ';' instruction

   80 instruction: expr
   81            | tWRITE expressions
   82            | tWRITELN expressions
   83            | tAGAIN
   84            | tSTOP
   85            | tRETURN
   86            | tRETURN expr
   87            | tIF '(' expr ')' tTHEN block
   88            | tIF '(' expr ')' tTHEN block elif
   89            | tWHILE '(' expr ')' tDO block
   90            | block

   91 elif: tELSE block
   92     | tELIF '(' expr ')' tTHEN block elif
   93     | tELIF '(' expr ')' tTHEN block


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 47
    '(' (40) 57 58 65 66 73 74 75 76 87 88 89 92 93
    ')' (41) 57 58 65 66 73 74 75 76 87 88 89 92 93
    '*' (42) 45
    '+' (43) 41 43
    ',' (44) 23 33 35
    '-' (45) 40 44
    '/' (47) 46
    ':' (58) 65 66
    ';' (59) 8 9 79
    '<' (60) 30 48
    '=' (61) 11 15 16 61
    '>' (62) 30 49
    '?' (63) 59
    '@' (64) 73 74
    '[' (91) 24 64 70
    ']' (93) 24 64 70
    '{' (123) 71 72
    '}' (125) 71 72
    error (256)
    tINTEGER <i> (258) 36
    tIDENTIFIER <s> (259) 12 13 14 15 16 31 69
    tSTRING <s> (260) 67 68
    tREAL <d> (261) 37
    tWHILE (262) 89
    tIF (263) 87 88
    tELIF (264) 92 93
    tTHEN (265) 87 88 92 93
    tELSE (266) 91
    tDO (267) 89
    tBEGIN (268) 5
    tEND (269) 5
    tAGAIN (270) 83
    tSTOP (271) 84
    tRETURN (272) 85 86
    tWRITE (273) 81
    tWRITELN (274) 82
    tINT_TYPE (275) 25
    tDOUBLE_TYPE (276) 26
    tTEXT_TYPE (277) 27
    tVOID_TYPE (278) 28
    tFOREIGN (279) 18
    tPUBLIC (280) 13 15
    tUSE (281) 17
    tVAR (282) 19
    tSIZE_OF (283) 57
    tRETURN_TYPE (284) 65 66
    tINPUT (285) 56
    tNULL (286) 39
    tPRIVATE (287)
    tOR (288) 54
    tAND (289) 55
    tNOT (290) 42
    tEQ (291) 53
    tNE (292) 52
    tGE (293) 50
    tLE (294) 51
    tUNARY (295)


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    file <sequence> (61)
        on left: 1 2 3 4
        on right: 0
    program <node> (62)
        on left: 5
        on right: 3 4
    declarations <sequence> (63)
        on left: 6 7 8 9
        on right: 2 4 7 9 71
    optional <expression> (64)
        on left: 10 11
        on right: 13 14
    declaration <node> (65)
        on left: 12 13 14 15 16
        on right: 6 7 8 9
    qualifier <i> (66)
        on left: 17 18
        on right: 12
    var <i> (67)
        on left: 19 20
        on right: 15 16
    types <vetor> (68)
        on left: 21 22 23
        on right: 23 30
    type <type> (69)
        on left: 24 25 26 27 28 29
        on right: 12 13 14 22 23 24 30 31 65 66
    funcType <type> (70)
        on left: 30
        on right: 29
    variable <typenode> (71)
        on left: 31
        on right: 32 33
    variables <sequence> (72)
        on left: 32 33
        on right: 33 66
    expressions <sequence> (73)
        on left: 34 35
        on right: 35 73 75 81 82
    expr <expression> (74)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 11 15 16 34 35 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 61 64 70 75 76 80 86 87 88 89 92 93
    function <expression> (75)
        on left: 65 66
        on right: 63
    string <s> (76)
        on left: 67 68
        on right: 38 68
    lval <lvalue> (77)
        on left: 69 70
        on right: 59 60 61
    block <bloco> (78)
        on left: 71 72
        on right: 5 65 66 87 88 89 90 91 92 93
    funcCall <expression> (79)
        on left: 73 74 75 76
        on right: 62
    instructions <sequence> (80)
        on left: 77 78 79
        on right: 71 72 77 79
    instruction <node> (81)
        on left: 80 81 82 83 84 85 86 87 88 89 90
        on right: 77 78 79
    elif <node> (82)
        on left: 91 92 93
        on right: 88 92


State 0

    0 $accept: . file $end

    tBEGIN        shift, and go to state 1
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tFOREIGN      shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tUSE          shift, and go to state 8
    tVAR          shift, and go to state 9
    '['           shift, and go to state 10

    tIDENTIFIER  reduce using rule 20 (var)
    $default     reduce using rule 1 (file)

    file          go to state 11
    program       go to state 12
    declarations  go to state 13
    declaration   go to state 14
    qualifier     go to state 15
    var           go to state 16
    type          go to state 17
    funcType      go to state 18


State 1

    5 program: tBEGIN . block tEND

    '{'  shift, and go to state 19

    block  go to state 20


State 2

   25 type: tINT_TYPE .

    $default  reduce using rule 25 (type)


State 3

   26 type: tDOUBLE_TYPE .

    $default  reduce using rule 26 (type)


State 4

   27 type: tTEXT_TYPE .

    $default  reduce using rule 27 (type)


State 5

   28 type: tVOID_TYPE .

    $default  reduce using rule 28 (type)


State 6

   18 qualifier: tFOREIGN .

    $default  reduce using rule 18 (qualifier)


State 7

   13 declaration: tPUBLIC . type tIDENTIFIER optional
   15            | tPUBLIC . var tIDENTIFIER '=' expr

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tVAR          shift, and go to state 9
    '['           shift, and go to state 10

    $default  reduce using rule 20 (var)

    var       go to state 21
    type      go to state 22
    funcType  go to state 18


State 8

   17 qualifier: tUSE .

    $default  reduce using rule 17 (qualifier)


State 9

   19 var: tVAR .

    $default  reduce using rule 19 (var)


State 10

   24 type: '[' . type ']'

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 23
    funcType  go to state 18


State 11

    0 $accept: file . $end

    $end  shift, and go to state 24


State 12

    3 file: program .

    $default  reduce using rule 3 (file)


State 13

    2 file: declarations .
    4     | declarations . program
    7 declarations: declarations . declaration
    9             | declarations . declaration ';'

    tBEGIN        shift, and go to state 1
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tFOREIGN      shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tUSE          shift, and go to state 8
    tVAR          shift, and go to state 9
    '['           shift, and go to state 10

    tIDENTIFIER  reduce using rule 20 (var)
    $default     reduce using rule 2 (file)

    program      go to state 25
    declaration  go to state 26
    qualifier    go to state 15
    var          go to state 16
    type         go to state 17
    funcType     go to state 18


State 14

    6 declarations: declaration .
    8             | declaration . ';'

    ';'  shift, and go to state 27

    $default  reduce using rule 6 (declarations)


State 15

   12 declaration: qualifier . type tIDENTIFIER

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 28
    funcType  go to state 18


State 16

   16 declaration: var . tIDENTIFIER '=' expr

    tIDENTIFIER  shift, and go to state 29


State 17

   14 declaration: type . tIDENTIFIER optional
   30 funcType: type . '<' types '>'

    tIDENTIFIER  shift, and go to state 30
    '<'          shift, and go to state 31


State 18

   29 type: funcType .

    $default  reduce using rule 29 (type)


State 19

   71 block: '{' . declarations instructions '}'
   72      | '{' . instructions '}'

    tINTEGER      shift, and go to state 32
    tIDENTIFIER   shift, and go to state 33
    tSTRING       shift, and go to state 34
    tREAL         shift, and go to state 35
    tWHILE        shift, and go to state 36
    tIF           shift, and go to state 37
    tAGAIN        shift, and go to state 38
    tSTOP         shift, and go to state 39
    tRETURN       shift, and go to state 40
    tWRITE        shift, and go to state 41
    tWRITELN      shift, and go to state 42
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tFOREIGN      shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tUSE          shift, and go to state 8
    tVAR          shift, and go to state 9
    tSIZE_OF      shift, and go to state 43
    tINPUT        shift, and go to state 44
    tNULL         shift, and go to state 45
    tNOT          shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '['           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 19
    '@'           shift, and go to state 51

    tIDENTIFIER  [reduce using rule 20 (var)]

    declarations  go to state 52
    declaration   go to state 14
    qualifier     go to state 15
    var           go to state 16
    type          go to state 17
    funcType      go to state 18
    expr          go to state 53
    function      go to state 54
    string        go to state 55
    lval          go to state 56
    block         go to state 57
    funcCall      go to state 58
    instructions  go to state 59
    instruction   go to state 60


State 20

    5 program: tBEGIN block . tEND

    tEND  shift, and go to state 61


State 21

   15 declaration: tPUBLIC var . tIDENTIFIER '=' expr

    tIDENTIFIER  shift, and go to state 62


State 22

   13 declaration: tPUBLIC type . tIDENTIFIER optional
   30 funcType: type . '<' types '>'

    tIDENTIFIER  shift, and go to state 63
    '<'          shift, and go to state 31


State 23

   24 type: '[' type . ']'
   30 funcType: type . '<' types '>'

    '<'  shift, and go to state 31
    ']'  shift, and go to state 64


State 24

    0 $accept: file $end .

    $default  accept


State 25

    4 file: declarations program .

    $default  reduce using rule 4 (file)


State 26

    7 declarations: declarations declaration .
    9             | declarations declaration . ';'

    ';'  shift, and go to state 65

    $default  reduce using rule 7 (declarations)


State 27

    8 declarations: declaration ';' .

    $default  reduce using rule 8 (declarations)


State 28

   12 declaration: qualifier type . tIDENTIFIER
   30 funcType: type . '<' types '>'

    tIDENTIFIER  shift, and go to state 66
    '<'          shift, and go to state 31


State 29

   16 declaration: var tIDENTIFIER . '=' expr

    '='  shift, and go to state 67


State 30

   14 declaration: type tIDENTIFIER . optional

    '='  shift, and go to state 68

    $default  reduce using rule 10 (optional)

    optional  go to state 69


State 31

   30 funcType: type '<' . types '>'

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    $default  reduce using rule 21 (types)

    types     go to state 70
    type      go to state 71
    funcType  go to state 18


State 32

   36 expr: tINTEGER .

    $default  reduce using rule 36 (expr)


State 33

   69 lval: tIDENTIFIER .

    $default  reduce using rule 69 (lval)


State 34

   67 string: tSTRING .

    $default  reduce using rule 67 (string)


State 35

   37 expr: tREAL .

    $default  reduce using rule 37 (expr)


State 36

   89 instruction: tWHILE . '(' expr ')' tDO block

    '('  shift, and go to state 72


State 37

   87 instruction: tIF . '(' expr ')' tTHEN block
   88            | tIF . '(' expr ')' tTHEN block elif

    '('  shift, and go to state 73


State 38

   83 instruction: tAGAIN .

    $default  reduce using rule 83 (instruction)


State 39

   84 instruction: tSTOP .

    $default  reduce using rule 84 (instruction)


State 40

   85 instruction: tRETURN .
   86            | tRETURN . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    tINTEGER     [reduce using rule 85 (instruction)]
    tIDENTIFIER  [reduce using rule 85 (instruction)]
    tSTRING      [reduce using rule 85 (instruction)]
    tREAL        [reduce using rule 85 (instruction)]
    tSIZE_OF     [reduce using rule 85 (instruction)]
    tINPUT       [reduce using rule 85 (instruction)]
    tNULL        [reduce using rule 85 (instruction)]
    tNOT         [reduce using rule 85 (instruction)]
    '+'          [reduce using rule 85 (instruction)]
    '-'          [reduce using rule 85 (instruction)]
    '['          [reduce using rule 85 (instruction)]
    '('          [reduce using rule 85 (instruction)]
    '@'          [reduce using rule 85 (instruction)]
    $default     reduce using rule 85 (instruction)

    expr      go to state 75
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 41

   81 instruction: tWRITE . expressions

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expressions  go to state 76
    expr         go to state 77
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    funcCall     go to state 58


State 42

   82 instruction: tWRITELN . expressions

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expressions  go to state 78
    expr         go to state 77
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    funcCall     go to state 58


State 43

   57 expr: tSIZE_OF . '(' expr ')'

    '('  shift, and go to state 79


State 44

   56 expr: tINPUT .

    $default  reduce using rule 56 (expr)


State 45

   39 expr: tNULL .

    $default  reduce using rule 39 (expr)


State 46

   42 expr: tNOT . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 80
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 47

   41 expr: '+' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 81
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 48

   40 expr: '-' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 82
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 49

   24 type: '[' . type ']'
   64 expr: '[' . expr ']'

    tINTEGER      shift, and go to state 32
    tIDENTIFIER   shift, and go to state 33
    tSTRING       shift, and go to state 34
    tREAL         shift, and go to state 35
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tSIZE_OF      shift, and go to state 43
    tINPUT        shift, and go to state 44
    tNULL         shift, and go to state 45
    tNOT          shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '['           shift, and go to state 49
    '('           shift, and go to state 50
    '@'           shift, and go to state 51

    type      go to state 23
    funcType  go to state 18
    expr      go to state 83
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 50

   58 expr: '(' . expr ')'
   65 function: '(' . ')' tRETURN_TYPE type ':' block
   66         | '(' . variables ')' tRETURN_TYPE type ':' block

    tINTEGER      shift, and go to state 32
    tIDENTIFIER   shift, and go to state 33
    tSTRING       shift, and go to state 34
    tREAL         shift, and go to state 35
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tSIZE_OF      shift, and go to state 43
    tINPUT        shift, and go to state 44
    tNULL         shift, and go to state 45
    tNOT          shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '['           shift, and go to state 49
    '('           shift, and go to state 50
    ')'           shift, and go to state 84
    '@'           shift, and go to state 51

    type       go to state 85
    funcType   go to state 18
    variable   go to state 86
    variables  go to state 87
    expr       go to state 88
    function   go to state 54
    string     go to state 55
    lval       go to state 56
    funcCall   go to state 58


State 51

   73 funcCall: '@' . '(' expressions ')'
   74         | '@' . '(' ')'

    '('  shift, and go to state 89


State 52

    7 declarations: declarations . declaration
    9             | declarations . declaration ';'
   71 block: '{' declarations . instructions '}'

    tINTEGER      shift, and go to state 32
    tIDENTIFIER   shift, and go to state 33
    tSTRING       shift, and go to state 34
    tREAL         shift, and go to state 35
    tWHILE        shift, and go to state 36
    tIF           shift, and go to state 37
    tAGAIN        shift, and go to state 38
    tSTOP         shift, and go to state 39
    tRETURN       shift, and go to state 40
    tWRITE        shift, and go to state 41
    tWRITELN      shift, and go to state 42
    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    tFOREIGN      shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tUSE          shift, and go to state 8
    tVAR          shift, and go to state 9
    tSIZE_OF      shift, and go to state 43
    tINPUT        shift, and go to state 44
    tNULL         shift, and go to state 45
    tNOT          shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '['           shift, and go to state 49
    '('           shift, and go to state 50
    '{'           shift, and go to state 19
    '@'           shift, and go to state 51

    tIDENTIFIER  [reduce using rule 20 (var)]

    declaration   go to state 26
    qualifier     go to state 15
    var           go to state 16
    type          go to state 17
    funcType      go to state 18
    expr          go to state 53
    function      go to state 54
    string        go to state 55
    lval          go to state 56
    block         go to state 57
    funcCall      go to state 58
    instructions  go to state 90
    instruction   go to state 60


State 53

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'
   80 instruction: expr .

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    '+'       [reduce using rule 80 (instruction)]
    '-'       [reduce using rule 80 (instruction)]
    '['       [reduce using rule 80 (instruction)]
    '('       [reduce using rule 80 (instruction)]
    $default  reduce using rule 80 (instruction)


State 54

   63 expr: function .

    $default  reduce using rule 63 (expr)


State 55

   38 expr: string .
   68 string: string . tSTRING

    tSTRING  shift, and go to state 106

    tSTRING   [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 56

   59 expr: lval . '?'
   60     | lval .
   61     | lval . '=' expr

    '='  shift, and go to state 107
    '?'  shift, and go to state 108

    $default  reduce using rule 60 (expr)


State 57

   90 instruction: block .

    $default  reduce using rule 90 (instruction)


State 58

   62 expr: funcCall .

    $default  reduce using rule 62 (expr)


State 59

   72 block: '{' instructions . '}'
   77 instructions: instructions . instruction
   79             | instructions . ';' instruction

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tWHILE       shift, and go to state 36
    tIF          shift, and go to state 37
    tAGAIN       shift, and go to state 38
    tSTOP        shift, and go to state 39
    tRETURN      shift, and go to state 40
    tWRITE       shift, and go to state 41
    tWRITELN     shift, and go to state 42
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    ';'          shift, and go to state 109
    '{'          shift, and go to state 19
    '}'          shift, and go to state 110
    '@'          shift, and go to state 51

    expr         go to state 53
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    block        go to state 57
    funcCall     go to state 58
    instruction  go to state 111


State 60

   78 instructions: instruction .

    $default  reduce using rule 78 (instructions)


State 61

    5 program: tBEGIN block tEND .

    $default  reduce using rule 5 (program)


State 62

   15 declaration: tPUBLIC var tIDENTIFIER . '=' expr

    '='  shift, and go to state 112


State 63

   13 declaration: tPUBLIC type tIDENTIFIER . optional

    '='  shift, and go to state 68

    $default  reduce using rule 10 (optional)

    optional  go to state 113


State 64

   24 type: '[' type ']' .

    $default  reduce using rule 24 (type)


State 65

    9 declarations: declarations declaration ';' .

    $default  reduce using rule 9 (declarations)


State 66

   12 declaration: qualifier type tIDENTIFIER .

    $default  reduce using rule 12 (declaration)


State 67

   16 declaration: var tIDENTIFIER '=' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 114
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 68

   11 optional: '=' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 115
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 69

   14 declaration: type tIDENTIFIER optional .

    $default  reduce using rule 14 (declaration)


State 70

   23 types: types . ',' type
   30 funcType: type '<' types . '>'

    '>'  shift, and go to state 116
    ','  shift, and go to state 117


State 71

   22 types: type .
   30 funcType: type . '<' types '>'

    '<'  shift, and go to state 31

    $default  reduce using rule 22 (types)


State 72

   89 instruction: tWHILE '(' . expr ')' tDO block

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 118
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 73

   87 instruction: tIF '(' . expr ')' tTHEN block
   88            | tIF '(' . expr ')' tTHEN block elif

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 119
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 74

   64 expr: '[' . expr ']'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 83
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 75

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'
   86 instruction: tRETURN expr .

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    '+'       [reduce using rule 86 (instruction)]
    '-'       [reduce using rule 86 (instruction)]
    '['       [reduce using rule 86 (instruction)]
    '('       [reduce using rule 86 (instruction)]
    $default  reduce using rule 86 (instruction)


State 76

   35 expressions: expressions . ',' expr
   81 instruction: tWRITE expressions .

    ','  shift, and go to state 120

    $default  reduce using rule 81 (instruction)


State 77

   34 expressions: expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    '+'       [reduce using rule 34 (expressions)]
    '-'       [reduce using rule 34 (expressions)]
    '['       [reduce using rule 34 (expressions)]
    '('       [reduce using rule 34 (expressions)]
    $default  reduce using rule 34 (expressions)


State 78

   35 expressions: expressions . ',' expr
   82 instruction: tWRITELN expressions .

    ','  shift, and go to state 120

    $default  reduce using rule 82 (instruction)


State 79

   57 expr: tSIZE_OF '(' . expr ')'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 121
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 80

   42 expr: tNOT expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tEQ  shift, and go to state 93
    tNE  shift, and go to state 94
    tGE  shift, and go to state 95
    tLE  shift, and go to state 96
    '>'  shift, and go to state 97
    '<'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 42 (expr)


State 81

   41 expr: '+' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 41 (expr)


State 82

   40 expr: '-' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 40 (expr)


State 83

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   64     | '[' expr . ']'
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    ']'   shift, and go to state 122
    '('   shift, and go to state 105


State 84

   65 function: '(' ')' . tRETURN_TYPE type ':' block

    tRETURN_TYPE  shift, and go to state 123


State 85

   30 funcType: type . '<' types '>'
   31 variable: type . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 124
    '<'          shift, and go to state 31


State 86

   32 variables: variable .

    $default  reduce using rule 32 (variables)


State 87

   33 variables: variables . ',' variable
   66 function: '(' variables . ')' tRETURN_TYPE type ':' block

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


State 88

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   58     | '(' expr . ')'
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105
    ')'   shift, and go to state 127


State 89

   73 funcCall: '@' '(' . expressions ')'
   74         | '@' '(' . ')'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    ')'          shift, and go to state 128
    '@'          shift, and go to state 51

    expressions  go to state 129
    expr         go to state 77
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    funcCall     go to state 58


State 90

   71 block: '{' declarations instructions . '}'
   77 instructions: instructions . instruction
   79             | instructions . ';' instruction

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tWHILE       shift, and go to state 36
    tIF          shift, and go to state 37
    tAGAIN       shift, and go to state 38
    tSTOP        shift, and go to state 39
    tRETURN      shift, and go to state 40
    tWRITE       shift, and go to state 41
    tWRITELN     shift, and go to state 42
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    ';'          shift, and go to state 109
    '{'          shift, and go to state 19
    '}'          shift, and go to state 130
    '@'          shift, and go to state 51

    expr         go to state 53
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    block        go to state 57
    funcCall     go to state 58
    instruction  go to state 111


State 91

   54 expr: expr tOR . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 131
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 92

   55 expr: expr tAND . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 132
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 93

   53 expr: expr tEQ . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 133
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 94

   52 expr: expr tNE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 134
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 95

   50 expr: expr tGE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 135
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 96

   51 expr: expr tLE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 136
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 97

   49 expr: expr '>' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 137
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 98

   48 expr: expr '<' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 138
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 99

   43 expr: expr '+' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 139
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 100

   44 expr: expr '-' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 140
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 101

   45 expr: expr '*' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 141
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 102

   46 expr: expr '/' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 142
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 103

   47 expr: expr '%' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 143
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 104

   70 lval: expr '[' . expr ']'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 144
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 105

   75 funcCall: expr '(' . expressions ')'
   76         | expr '(' . ')'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    ')'          shift, and go to state 145
    '@'          shift, and go to state 51

    expressions  go to state 146
    expr         go to state 77
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    funcCall     go to state 58


State 106

   68 string: string tSTRING .

    $default  reduce using rule 68 (string)


State 107

   61 expr: lval '=' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 147
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 108

   59 expr: lval '?' .

    $default  reduce using rule 59 (expr)


State 109

   79 instructions: instructions ';' . instruction

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tWHILE       shift, and go to state 36
    tIF          shift, and go to state 37
    tAGAIN       shift, and go to state 38
    tSTOP        shift, and go to state 39
    tRETURN      shift, and go to state 40
    tWRITE       shift, and go to state 41
    tWRITELN     shift, and go to state 42
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '{'          shift, and go to state 19
    '@'          shift, and go to state 51

    expr         go to state 53
    function     go to state 54
    string       go to state 55
    lval         go to state 56
    block        go to state 57
    funcCall     go to state 58
    instruction  go to state 148


State 110

   72 block: '{' instructions '}' .

    $default  reduce using rule 72 (block)


State 111

   77 instructions: instructions instruction .

    $default  reduce using rule 77 (instructions)


State 112

   15 declaration: tPUBLIC var tIDENTIFIER '=' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 149
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 113

   13 declaration: tPUBLIC type tIDENTIFIER optional .

    $default  reduce using rule 13 (declaration)


State 114

   16 declaration: var tIDENTIFIER '=' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    $default  reduce using rule 16 (declaration)


State 115

   11 optional: '=' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    $default  reduce using rule 11 (optional)


State 116

   30 funcType: type '<' types '>' .

    $default  reduce using rule 30 (funcType)


State 117

   23 types: types ',' . type

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 150
    funcType  go to state 18


State 118

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'
   89 instruction: tWHILE '(' expr . ')' tDO block

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105
    ')'   shift, and go to state 151


State 119

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'
   87 instruction: tIF '(' expr . ')' tTHEN block
   88            | tIF '(' expr . ')' tTHEN block elif

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105
    ')'   shift, and go to state 152


State 120

   35 expressions: expressions ',' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 153
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 121

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   57     | tSIZE_OF '(' expr . ')'
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105
    ')'   shift, and go to state 154


State 122

   64 expr: '[' expr ']' .

    $default  reduce using rule 64 (expr)


State 123

   65 function: '(' ')' tRETURN_TYPE . type ':' block

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 155
    funcType  go to state 18


State 124

   31 variable: type tIDENTIFIER .

    $default  reduce using rule 31 (variable)


State 125

   66 function: '(' variables ')' . tRETURN_TYPE type ':' block

    tRETURN_TYPE  shift, and go to state 156


State 126

   33 variables: variables ',' . variable

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 85
    funcType  go to state 18
    variable  go to state 157


State 127

   58 expr: '(' expr ')' .

    $default  reduce using rule 58 (expr)


State 128

   74 funcCall: '@' '(' ')' .

    $default  reduce using rule 74 (funcCall)


State 129

   35 expressions: expressions . ',' expr
   73 funcCall: '@' '(' expressions . ')'

    ')'  shift, and go to state 158
    ','  shift, and go to state 120


State 130

   71 block: '{' declarations instructions '}' .

    $default  reduce using rule 71 (block)


State 131

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   54     | expr tOR expr .
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    $default  reduce using rule 54 (expr)


State 132

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   55     | expr tAND expr .
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tEQ  shift, and go to state 93
    tNE  shift, and go to state 94
    tGE  shift, and go to state 95
    tLE  shift, and go to state 96
    '>'  shift, and go to state 97
    '<'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 55 (expr)


State 133

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   53     | expr tEQ expr .
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tGE  shift, and go to state 95
    tLE  shift, and go to state 96
    '>'  shift, and go to state 97
    '<'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 53 (expr)


State 134

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   52     | expr tNE expr .
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tGE  shift, and go to state 95
    tLE  shift, and go to state 96
    '>'  shift, and go to state 97
    '<'  shift, and go to state 98
    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 52 (expr)


State 135

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   50     | expr tGE expr .
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 50 (expr)


State 136

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   51     | expr tLE expr .
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 51 (expr)


State 137

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   49     | expr '>' expr .
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 49 (expr)


State 138

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   48     | expr '<' expr .
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 48 (expr)


State 139

   43 expr: expr . '+' expr
   43     | expr '+' expr .
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 43 (expr)


State 140

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   44     | expr '-' expr .
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103
    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 44 (expr)


State 141

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   45     | expr '*' expr .
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 45 (expr)


State 142

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   46     | expr '/' expr .
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 46 (expr)


State 143

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   47     | expr '%' expr .
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    '['  shift, and go to state 104
    '('  shift, and go to state 105

    $default  reduce using rule 47 (expr)


State 144

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   70     | expr '[' expr . ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    ']'   shift, and go to state 159
    '('   shift, and go to state 105


State 145

   76 funcCall: expr '(' ')' .

    $default  reduce using rule 76 (funcCall)


State 146

   35 expressions: expressions . ',' expr
   75 funcCall: expr '(' expressions . ')'

    ')'  shift, and go to state 160
    ','  shift, and go to state 120


State 147

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   61     | lval '=' expr .
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    $default  reduce using rule 61 (expr)


State 148

   79 instructions: instructions ';' instruction .

    $default  reduce using rule 79 (instructions)


State 149

   15 declaration: tPUBLIC var tIDENTIFIER '=' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    $default  reduce using rule 15 (declaration)


State 150

   23 types: types ',' type .
   30 funcType: type . '<' types '>'

    '<'  shift, and go to state 31

    $default  reduce using rule 23 (types)


State 151

   89 instruction: tWHILE '(' expr ')' . tDO block

    tDO  shift, and go to state 161


State 152

   87 instruction: tIF '(' expr ')' . tTHEN block
   88            | tIF '(' expr ')' . tTHEN block elif

    tTHEN  shift, and go to state 162


State 153

   35 expressions: expressions ',' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105

    '+'       [reduce using rule 35 (expressions)]
    '-'       [reduce using rule 35 (expressions)]
    '['       [reduce using rule 35 (expressions)]
    '('       [reduce using rule 35 (expressions)]
    $default  reduce using rule 35 (expressions)


State 154

   57 expr: tSIZE_OF '(' expr ')' .

    $default  reduce using rule 57 (expr)


State 155

   30 funcType: type . '<' types '>'
   65 function: '(' ')' tRETURN_TYPE type . ':' block

    '<'  shift, and go to state 31
    ':'  shift, and go to state 163


State 156

   66 function: '(' variables ')' tRETURN_TYPE . type ':' block

    tINT_TYPE     shift, and go to state 2
    tDOUBLE_TYPE  shift, and go to state 3
    tTEXT_TYPE    shift, and go to state 4
    tVOID_TYPE    shift, and go to state 5
    '['           shift, and go to state 10

    type      go to state 164
    funcType  go to state 18


State 157

   33 variables: variables ',' variable .

    $default  reduce using rule 33 (variables)


State 158

   73 funcCall: '@' '(' expressions ')' .

    $default  reduce using rule 73 (funcCall)


State 159

   70 lval: expr '[' expr ']' .

    $default  reduce using rule 70 (lval)


State 160

   75 funcCall: expr '(' expressions ')' .

    $default  reduce using rule 75 (funcCall)


State 161

   89 instruction: tWHILE '(' expr ')' tDO . block

    '{'  shift, and go to state 19

    block  go to state 165


State 162

   87 instruction: tIF '(' expr ')' tTHEN . block
   88            | tIF '(' expr ')' tTHEN . block elif

    '{'  shift, and go to state 19

    block  go to state 166


State 163

   65 function: '(' ')' tRETURN_TYPE type ':' . block

    '{'  shift, and go to state 19

    block  go to state 167


State 164

   30 funcType: type . '<' types '>'
   66 function: '(' variables ')' tRETURN_TYPE type . ':' block

    '<'  shift, and go to state 31
    ':'  shift, and go to state 168


State 165

   89 instruction: tWHILE '(' expr ')' tDO block .

    $default  reduce using rule 89 (instruction)


State 166

   87 instruction: tIF '(' expr ')' tTHEN block .
   88            | tIF '(' expr ')' tTHEN block . elif

    tELIF  shift, and go to state 169
    tELSE  shift, and go to state 170

    $default  reduce using rule 87 (instruction)

    elif  go to state 171


State 167

   65 function: '(' ')' tRETURN_TYPE type ':' block .

    $default  reduce using rule 65 (function)


State 168

   66 function: '(' variables ')' tRETURN_TYPE type ':' . block

    '{'  shift, and go to state 19

    block  go to state 172


State 169

   92 elif: tELIF . '(' expr ')' tTHEN block elif
   93     | tELIF . '(' expr ')' tTHEN block

    '('  shift, and go to state 173


State 170

   91 elif: tELSE . block

    '{'  shift, and go to state 19

    block  go to state 174


State 171

   88 instruction: tIF '(' expr ')' tTHEN block elif .

    $default  reduce using rule 88 (instruction)


State 172

   66 function: '(' variables ')' tRETURN_TYPE type ':' block .

    $default  reduce using rule 66 (function)


State 173

   92 elif: tELIF '(' . expr ')' tTHEN block elif
   93     | tELIF '(' . expr ')' tTHEN block

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 33
    tSTRING      shift, and go to state 34
    tREAL        shift, and go to state 35
    tSIZE_OF     shift, and go to state 43
    tINPUT       shift, and go to state 44
    tNULL        shift, and go to state 45
    tNOT         shift, and go to state 46
    '+'          shift, and go to state 47
    '-'          shift, and go to state 48
    '['          shift, and go to state 74
    '('          shift, and go to state 50
    '@'          shift, and go to state 51

    expr      go to state 175
    function  go to state 54
    string    go to state 55
    lval      go to state 56
    funcCall  go to state 58


State 174

   91 elif: tELSE block .

    $default  reduce using rule 91 (elif)


State 175

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . tGE expr
   51     | expr . tLE expr
   52     | expr . tNE expr
   53     | expr . tEQ expr
   54     | expr . tOR expr
   55     | expr . tAND expr
   70 lval: expr . '[' expr ']'
   75 funcCall: expr . '(' expressions ')'
   76         | expr . '(' ')'
   92 elif: tELIF '(' expr . ')' tTHEN block elif
   93     | tELIF '(' expr . ')' tTHEN block

    tOR   shift, and go to state 91
    tAND  shift, and go to state 92
    tEQ   shift, and go to state 93
    tNE   shift, and go to state 94
    tGE   shift, and go to state 95
    tLE   shift, and go to state 96
    '>'   shift, and go to state 97
    '<'   shift, and go to state 98
    '+'   shift, and go to state 99
    '-'   shift, and go to state 100
    '*'   shift, and go to state 101
    '/'   shift, and go to state 102
    '%'   shift, and go to state 103
    '['   shift, and go to state 104
    '('   shift, and go to state 105
    ')'   shift, and go to state 176


State 176

   92 elif: tELIF '(' expr ')' . tTHEN block elif
   93     | tELIF '(' expr ')' . tTHEN block

    tTHEN  shift, and go to state 177


State 177

   92 elif: tELIF '(' expr ')' tTHEN . block elif
   93     | tELIF '(' expr ')' tTHEN . block

    '{'  shift, and go to state 19

    block  go to state 178


State 178

   92 elif: tELIF '(' expr ')' tTHEN block . elif
   93     | tELIF '(' expr ')' tTHEN block .

    tELIF  shift, and go to state 169
    tELSE  shift, and go to state 170

    $default  reduce using rule 93 (elif)

    elif  go to state 179


State 179

   92 elif: tELIF '(' expr ')' tTHEN block elif .

    $default  reduce using rule 92 (elif)
