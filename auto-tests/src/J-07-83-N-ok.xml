<sequence_node size='2'>
  <variable_declaration_node name='f' qualifier='private' type='var'>
  <initializer>
      <function_definition_node type='void'>
        <block>
          <block_node>
            <declarations>
              <sequence_node size='1'>
                <variable_declaration_node name='main' qualifier='private' type='integer'>
                <initializer>
                    <integer_node>1</integer_node>
                </initializer>
                </variable_declaration_node>
              </sequence_node>
            </declarations>
            <instructions>
              <sequence_node size='1'>
                <print_node>
                  <sequence_node size='1'>
                    <add_node>
                      <mul_node>
                        <integer_node>2</integer_node>
                        <rvalue_node>
                            <variable_node>main</variable_node>
                        </rvalue_node>
                      </mul_node>
                      <rvalue_node>
                          <variable_node>main</variable_node>
                      </rvalue_node>
                    </add_node>
                  </sequence_node>
                </print_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <program_node>
      <block_node>
        <instructions>
          <sequence_node size='2'>
            <evaluation_node>
              <function_call_node>
              <expr>
                  <rvalue_node>
                      <variable_node>f</variable_node>
                  </rvalue_node>
              </expr>
              <arguments>
                  <sequence_node size='0'>
                  </sequence_node>
              </arguments>
              </function_call_node>
            </evaluation_node>
            <return_node>
              <retval>
                <integer_node>0</integer_node>
              </retval>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
