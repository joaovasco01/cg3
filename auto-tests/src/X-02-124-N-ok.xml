<sequence_node size='3'>
  <variable_declaration_node name='f' qualifier='private' type='(unknown or unsupported type)'>
  <initializer>
      <function_definition_node type='double'>
        <arguments>
          <sequence_node size='1'>
            <variable_declaration_node name='i' qualifier='private' type='integer'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <instructions>
              <sequence_node size='1'>
                <return_node>
                  <retval>
                    <add_node>
                      <rvalue_node>
                          <variable_node>i</variable_node>
                      </rvalue_node>
                      <double_node>1.1</double_node>
                    </add_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <variable_declaration_node name='g' qualifier='private' type='(unknown or unsupported type)'>
  <initializer>
      <function_definition_node type='double'>
        <arguments>
          <sequence_node size='2'>
            <variable_declaration_node name='f' qualifier='private' type='(unknown or unsupported type)'>
            </variable_declaration_node>
            <variable_declaration_node name='i' qualifier='private' type='integer'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <instructions>
              <sequence_node size='1'>
                <return_node>
                  <retval>
                    <function_call_node>
                    <expr>
                        <rvalue_node>
                            <variable_node>f</variable_node>
                        </rvalue_node>
                    </expr>
                    <arguments>
                        <sequence_node size='1'>
                          <rvalue_node>
                              <variable_node>i</variable_node>
                          </rvalue_node>
                        </sequence_node>
                    </arguments>
                    </function_call_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <program_node>
      <block_node>
        <declarations>
          <sequence_node size='1'>
            <variable_declaration_node name='ff' qualifier='private' type='(unknown or unsupported type)'>
            <initializer>
                <function_definition_node type='integer'>
                  <arguments>
                    <sequence_node size='1'>
                      <variable_declaration_node name='d' qualifier='private' type='double'>
                      </variable_declaration_node>
                    </sequence_node>
                  </arguments>
                  <block>
                    <block_node>
                      <instructions>
                        <sequence_node size='1'>
                          <return_node>
                            <retval>
                              <integer_node>2</integer_node>
                            </retval>
                          </return_node>
                        </sequence_node>
                      </instructions>
                    </block_node>
                  </block>
                </function_definition_node>
            </initializer>
            </variable_declaration_node>
          </sequence_node>
        </declarations>
        <instructions>
          <sequence_node size='6'>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>f</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='1'>
                      <integer_node>0</integer_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <evaluation_node>
              <assignment_node>
              <variable_node>f</variable_node>
                  <function_definition_node type='integer'>
                    <arguments>
                      <sequence_node size='1'>
                        <variable_declaration_node name='d' qualifier='private' type='double'>
                        </variable_declaration_node>
                      </sequence_node>
                    </arguments>
                    <block>
                      <block_node>
                        <instructions>
                          <sequence_node size='1'>
                            <return_node>
                              <retval>
                                <neg_node>
                                  <integer_node>1</integer_node>
                                </neg_node>
                              </retval>
                            </return_node>
                          </sequence_node>
                        </instructions>
                      </block_node>
                    </block>
                  </function_definition_node>
              </assignment_node>
            </evaluation_node>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>f</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='1'>
                      <integer_node>0</integer_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>ff</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='1'>
                      <integer_node>0</integer_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>g</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='2'>
                      <function_definition_node type='integer'>
                        <arguments>
                          <sequence_node size='1'>
                            <variable_declaration_node name='d' qualifier='private' type='double'>
                            </variable_declaration_node>
                          </sequence_node>
                        </arguments>
                        <block>
                          <block_node>
                            <instructions>
                              <sequence_node size='1'>
                                <return_node>
                                  <retval>
                                    <neg_node>
                                      <integer_node>2</integer_node>
                                    </neg_node>
                                  </retval>
                                </return_node>
                              </sequence_node>
                            </instructions>
                          </block_node>
                        </block>
                      </function_definition_node>
                      <integer_node>0</integer_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <return_node>
              <retval>
                <integer_node>0</integer_node>
              </retval>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
