<sequence_node size='4'>
  <variable_declaration_node name='g' qualifier='use' type='(unknown or unsupported type)'>
  </variable_declaration_node>
  <variable_declaration_node name='f' qualifier='public' type='var'>
  <initializer>
      <function_definition_node type='integer'>
        <arguments>
          <sequence_node size='1'>
            <variable_declaration_node name='i' qualifier='private' type='integer'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <declarations>
              <sequence_node size='1'>
                <variable_declaration_node name='n' qualifier='private' type='integer'>
                <initializer>
                    <integer_node>9</integer_node>
                </initializer>
                </variable_declaration_node>
              </sequence_node>
            </declarations>
            <instructions>
              <sequence_node size='2'>
                <if_else_node>
                  <condition>
                    <eq_node>
                      <rvalue_node>
                          <variable_node>i</variable_node>
                      </rvalue_node>
                      <integer_node>0</integer_node>
                    </eq_node>
                  </condition>
                  <then>
                    <block_node>
                      <instructions>
                        <sequence_node size='1'>
                          <evaluation_node>
                            <assignment_node>
                            <variable_node>n</variable_node>
                                <integer_node>0</integer_node>
                            </assignment_node>
                          </evaluation_node>
                        </sequence_node>
                      </instructions>
                    </block_node>
                  </then>
                  <else>
                    <block_node>
                      <instructions>
                        <sequence_node size='1'>
                          <evaluation_node>
                            <assignment_node>
                            <variable_node>n</variable_node>
                                <add_node>
                                  <rvalue_node>
                                      <variable_node>i</variable_node>
                                  </rvalue_node>
                                  <function_call_node>
                                  <expr>
                                      <rvalue_node>
                                          <variable_node>g</variable_node>
                                      </rvalue_node>
                                  </expr>
                                  <arguments>
                                      <sequence_node size='1'>
                                        <sub_node>
                                          <rvalue_node>
                                              <variable_node>i</variable_node>
                                          </rvalue_node>
                                          <integer_node>1</integer_node>
                                        </sub_node>
                                      </sequence_node>
                                  </arguments>
                                  </function_call_node>
                                </add_node>
                            </assignment_node>
                          </evaluation_node>
                        </sequence_node>
                      </instructions>
                    </block_node>
                  </else>
                </if_else_node>
                <return_node>
                  <retval>
                    <rvalue_node>
                        <variable_node>n</variable_node>
                    </rvalue_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <variable_declaration_node name='g' qualifier='public' type='var'>
  <initializer>
      <function_definition_node type='integer'>
        <arguments>
          <sequence_node size='1'>
            <variable_declaration_node name='i' qualifier='private' type='integer'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <declarations>
              <sequence_node size='1'>
                <variable_declaration_node name='n' qualifier='private' type='integer'>
                <initializer>
                    <integer_node>9</integer_node>
                </initializer>
                </variable_declaration_node>
              </sequence_node>
            </declarations>
            <instructions>
              <sequence_node size='2'>
                <if_else_node>
                  <condition>
                    <eq_node>
                      <rvalue_node>
                          <variable_node>i</variable_node>
                      </rvalue_node>
                      <integer_node>0</integer_node>
                    </eq_node>
                  </condition>
                  <then>
                    <block_node>
                      <instructions>
                        <sequence_node size='1'>
                          <evaluation_node>
                            <assignment_node>
                            <variable_node>n</variable_node>
                                <integer_node>0</integer_node>
                            </assignment_node>
                          </evaluation_node>
                        </sequence_node>
                      </instructions>
                    </block_node>
                  </then>
                  <else>
                    <block_node>
                      <instructions>
                        <sequence_node size='1'>
                          <evaluation_node>
                            <assignment_node>
                            <variable_node>n</variable_node>
                                <add_node>
                                  <rvalue_node>
                                      <variable_node>i</variable_node>
                                  </rvalue_node>
                                  <function_call_node>
                                  <expr>
                                      <rvalue_node>
                                          <variable_node>f</variable_node>
                                      </rvalue_node>
                                  </expr>
                                  <arguments>
                                      <sequence_node size='1'>
                                        <sub_node>
                                          <rvalue_node>
                                              <variable_node>i</variable_node>
                                          </rvalue_node>
                                          <integer_node>1</integer_node>
                                        </sub_node>
                                      </sequence_node>
                                  </arguments>
                                  </function_call_node>
                                </add_node>
                            </assignment_node>
                          </evaluation_node>
                        </sequence_node>
                      </instructions>
                    </block_node>
                  </else>
                </if_else_node>
                <return_node>
                  <retval>
                    <rvalue_node>
                        <variable_node>n</variable_node>
                    </rvalue_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <program_node>
      <block_node>
        <instructions>
          <sequence_node size='2'>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>f</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='1'>
                      <integer_node>3</integer_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <return_node>
              <retval>
                <integer_node>0</integer_node>
              </retval>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
