<sequence_node size='4'>
  <variable_declaration_node name='g' qualifier='use' type='(unknown or unsupported type)'>
  </variable_declaration_node>
  <variable_declaration_node name='f' qualifier='private' type='var'>
  <initializer>
      <function_definition_node type='integer'>
        <arguments>
          <sequence_node size='1'>
            <variable_declaration_node name='s' qualifier='private' type='string'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <instructions>
              <sequence_node size='2'>
                <evaluation_node>
                  <function_call_node>
                  <expr>
                      <rvalue_node>
                          <variable_node>g</variable_node>
                      </rvalue_node>
                  </expr>
                  <arguments>
                      <sequence_node size='1'>
                        <rvalue_node>
                            <variable_node>s</variable_node>
                        </rvalue_node>
                      </sequence_node>
                  </arguments>
                  </function_call_node>
                </evaluation_node>
                <return_node>
                  <retval>
                    <integer_node>10</integer_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <variable_declaration_node name='g' qualifier='private' type='var'>
  <initializer>
      <function_definition_node type='integer'>
        <arguments>
          <sequence_node size='1'>
            <variable_declaration_node name='n' qualifier='private' type='string'>
            </variable_declaration_node>
          </sequence_node>
        </arguments>
        <block>
          <block_node>
            <instructions>
              <sequence_node size='2'>
                <print_node>
                  <sequence_node size='1'>
                    <rvalue_node>
                        <variable_node>n</variable_node>
                    </rvalue_node>
                  </sequence_node>
                </print_node>
                <return_node>
                  <retval>
                    <integer_node>14</integer_node>
                  </retval>
                </return_node>
              </sequence_node>
            </instructions>
          </block_node>
        </block>
      </function_definition_node>
  </initializer>
  </variable_declaration_node>
  <program_node>
      <block_node>
        <instructions>
          <sequence_node size='2'>
            <print_node>
              <sequence_node size='1'>
                <function_call_node>
                <expr>
                    <rvalue_node>
                        <variable_node>f</variable_node>
                    </rvalue_node>
                </expr>
                <arguments>
                    <sequence_node size='1'>
                      <string_node>ola</string_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </sequence_node>
            </print_node>
            <return_node>
              <retval>
                <integer_node>0</integer_node>
              </retval>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
