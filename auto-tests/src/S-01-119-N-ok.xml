<sequence_node size='1'>
  <program_node>
      <block_node>
        <declarations>
          <sequence_node size='1'>
            <variable_declaration_node name='f' qualifier='private' type='(unknown or unsupported type)'>
            </variable_declaration_node>
          </sequence_node>
        </declarations>
        <instructions>
          <sequence_node size='3'>
            <evaluation_node>
              <assignment_node>
              <variable_node>f</variable_node>
                  <function_definition_node type='void'>
                    <block>
                      <block_node>
                        <declarations>
                          <sequence_node size='1'>
                            <variable_declaration_node name='x' qualifier='private' type='integer'>
                            <initializer>
                                <integer_node>3</integer_node>
                            </initializer>
                            </variable_declaration_node>
                          </sequence_node>
                        </declarations>
                        <instructions>
                          <sequence_node size='1'>
                            <print_node>
                              <sequence_node size='1'>
                                <rvalue_node>
                                    <variable_node>x</variable_node>
                                </rvalue_node>
                              </sequence_node>
                            </print_node>
                          </sequence_node>
                        </instructions>
                      </block_node>
                    </block>
                  </function_definition_node>
              </assignment_node>
            </evaluation_node>
            <evaluation_node>
              <function_call_node>
              <expr>
                  <rvalue_node>
                      <variable_node>f</variable_node>
                  </rvalue_node>
              </expr>
              <arguments>
                  <sequence_node size='0'>
                  </sequence_node>
              </arguments>
              </function_call_node>
            </evaluation_node>
            <return_node>
              <retval>
                <integer_node>0</integer_node>
              </retval>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
